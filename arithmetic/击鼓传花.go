package main

import "fmt"

//聪明的小赛提出一个有趣的问题：有多少种不同的方法可以使得从小赛手里开始传的花，
// 传了m次以后，又回到小赛手里。对于传递的方法当且仅当这两种方法中，
// 接到花的同学按接球顺序组成的序列是不同的，才视作两种传花的方法不同。
// 比如有3个同学1号、2号、3号，并假设小赛为1号，花传了3次回到小赛手里的方式有1->2->3->1和1->3->2->1， 共2种。

func main(){
	var n ,m int
	fmt.Scanf("%d %d", &n, &m)

	var dp = make(map[int][]int, m)

	for i := 0; i < m; i++ {
		dp[i] = make([]int, n)
	}

	dp[0][0] = 1

	//传了i次
	for i := 1; i < m; i++ {

		//传给了j同学
		for j := 0; j < n; j++{

			// 更新前面几次传递的结果
			// 第k次传递给第j位同学的种类数 = 第k-1次传给其左右两位同学的种类次数之和。
			for k := i; k > 0; k-- {
				dp[k][j] = dp[k-1][(j-1+n)%n] + dp[k-1][(j+1)%n]
			}

		}

	}

	fmt.Println(dp[m-1][0])
}


